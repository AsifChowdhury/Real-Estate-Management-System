//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RealEstateManagementSystem.ReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_PaymentComparison")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_PaymentComparison : global::System.Data.DataSet {
        
        private sp_PaymentComparisonDataTable tablesp_PaymentComparison;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ds_PaymentComparison() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ds_PaymentComparison(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["sp_PaymentComparison"] != null)) {
                    base.Tables.Add(new sp_PaymentComparisonDataTable(ds.Tables["sp_PaymentComparison"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_PaymentComparisonDataTable sp_PaymentComparison {
            get {
                return this.tablesp_PaymentComparison;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ds_PaymentComparison cln = ((ds_PaymentComparison)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["sp_PaymentComparison"] != null)) {
                    base.Tables.Add(new sp_PaymentComparisonDataTable(ds.Tables["sp_PaymentComparison"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablesp_PaymentComparison = ((sp_PaymentComparisonDataTable)(base.Tables["sp_PaymentComparison"]));
            if ((initTable == true)) {
                if ((this.tablesp_PaymentComparison != null)) {
                    this.tablesp_PaymentComparison.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ds_PaymentComparison";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_PaymentComparison.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablesp_PaymentComparison = new sp_PaymentComparisonDataTable();
            base.Tables.Add(this.tablesp_PaymentComparison);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesp_PaymentComparison() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_PaymentComparison ds = new ds_PaymentComparison();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void sp_PaymentComparisonRowChangeEventHandler(object sender, sp_PaymentComparisonRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_PaymentComparisonDataTable : global::System.Data.TypedTableBase<sp_PaymentComparisonRow> {
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnCurrentAddress;
            
            private global::System.Data.DataColumn columnSalesPerson;
            
            private global::System.Data.DataColumn columnUnitInfo;
            
            private global::System.Data.DataColumn columnLoanInfo;
            
            private global::System.Data.DataColumn columnClientStatus;
            
            private global::System.Data.DataColumn columnisActiveClient;
            
            private global::System.Data.DataColumn columnAmountInHand;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnDecreasedArea;
            
            private global::System.Data.DataColumn columnRebateAmount;
            
            private global::System.Data.DataColumn columnTotalPayable;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnInstallmentId;
            
            private global::System.Data.DataColumn columnInstallTypeId;
            
            private global::System.Data.DataColumn columnInstallType;
            
            private global::System.Data.DataColumn columnInstallmentName;
            
            private global::System.Data.DataColumn columnAmountPayable;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            private global::System.Data.DataColumn columnPaymentDescription;
            
            private global::System.Data.DataColumn columnTransactionType;
            
            private global::System.Data.DataColumn columnIncreasedArea_Payable;
            
            private global::System.Data.DataColumn columnIncreasedArea_Paid;
            
            private global::System.Data.DataColumn columnIncreasedArea_Breakup;
            
            private global::System.Data.DataColumn columnVariationCost_Payable;
            
            private global::System.Data.DataColumn columnVariationCost_Paid;
            
            private global::System.Data.DataColumn columnVariationCost_Breakup;
            
            private global::System.Data.DataColumn columnDelayCharge_Payable;
            
            private global::System.Data.DataColumn columnDelayCharge_Paid;
            
            private global::System.Data.DataColumn columnDelayCharge_Breakup;
            
            private global::System.Data.DataColumn columnUtilityCharge_Payable;
            
            private global::System.Data.DataColumn columnUtilityCharge_Paid;
            
            private global::System.Data.DataColumn columnUtilityCharge_Breakup;
            
            private global::System.Data.DataColumn columnVAT_Payable;
            
            private global::System.Data.DataColumn columnVAT_Paid;
            
            private global::System.Data.DataColumn columnVAT_Breakup;
            
            private global::System.Data.DataColumn columnAssociationFee_Payable;
            
            private global::System.Data.DataColumn columnAssociationFee_Paid;
            
            private global::System.Data.DataColumn columnAssociationFee_Breakup;
            
            private global::System.Data.DataColumn columnTransferFee_Payable;
            
            private global::System.Data.DataColumn columnTransferFee_Paid;
            
            private global::System.Data.DataColumn columnTransferFee_Breakup;
            
            private global::System.Data.DataColumn columnRegistrationFee_Payable;
            
            private global::System.Data.DataColumn columnRegistrationFee_Paid;
            
            private global::System.Data.DataColumn columnRegistrationFee_Breakup;
            
            private global::System.Data.DataColumn columnServiceCharge_Payable;
            
            private global::System.Data.DataColumn columnServiceCharge_Paid;
            
            private global::System.Data.DataColumn columnServiceCharge_Breakup;
            
            private global::System.Data.DataColumn columnSolarPanel_Payable;
            
            private global::System.Data.DataColumn columnSolarPanel_Paid;
            
            private global::System.Data.DataColumn columnSolarPanel_Breakup;
            
            private global::System.Data.DataColumn columnVerifiedBy;
            
            private global::System.Data.DataColumn columnCheckedBy;
            
            private global::System.Data.DataColumn columnRecommendedBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_PaymentComparisonDataTable() {
                this.TableName = "sp_PaymentComparison";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sp_PaymentComparisonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected sp_PaymentComparisonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentAddressColumn {
                get {
                    return this.columnCurrentAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesPersonColumn {
                get {
                    return this.columnSalesPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitInfoColumn {
                get {
                    return this.columnUnitInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoanInfoColumn {
                get {
                    return this.columnLoanInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientStatusColumn {
                get {
                    return this.columnClientStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isActiveClientColumn {
                get {
                    return this.columnisActiveClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountInHandColumn {
                get {
                    return this.columnAmountInHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecreasedAreaColumn {
                get {
                    return this.columnDecreasedArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RebateAmountColumn {
                get {
                    return this.columnRebateAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPayableColumn {
                get {
                    return this.columnTotalPayable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstallmentIdColumn {
                get {
                    return this.columnInstallmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstallTypeIdColumn {
                get {
                    return this.columnInstallTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstallTypeColumn {
                get {
                    return this.columnInstallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstallmentNameColumn {
                get {
                    return this.columnInstallmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPayableColumn {
                get {
                    return this.columnAmountPayable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentDescriptionColumn {
                get {
                    return this.columnPaymentDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionTypeColumn {
                get {
                    return this.columnTransactionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncreasedArea_PayableColumn {
                get {
                    return this.columnIncreasedArea_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncreasedArea_PaidColumn {
                get {
                    return this.columnIncreasedArea_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncreasedArea_BreakupColumn {
                get {
                    return this.columnIncreasedArea_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VariationCost_PayableColumn {
                get {
                    return this.columnVariationCost_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VariationCost_PaidColumn {
                get {
                    return this.columnVariationCost_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VariationCost_BreakupColumn {
                get {
                    return this.columnVariationCost_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayCharge_PayableColumn {
                get {
                    return this.columnDelayCharge_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayCharge_PaidColumn {
                get {
                    return this.columnDelayCharge_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayCharge_BreakupColumn {
                get {
                    return this.columnDelayCharge_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilityCharge_PayableColumn {
                get {
                    return this.columnUtilityCharge_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilityCharge_PaidColumn {
                get {
                    return this.columnUtilityCharge_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilityCharge_BreakupColumn {
                get {
                    return this.columnUtilityCharge_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_PayableColumn {
                get {
                    return this.columnVAT_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_PaidColumn {
                get {
                    return this.columnVAT_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_BreakupColumn {
                get {
                    return this.columnVAT_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociationFee_PayableColumn {
                get {
                    return this.columnAssociationFee_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociationFee_PaidColumn {
                get {
                    return this.columnAssociationFee_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociationFee_BreakupColumn {
                get {
                    return this.columnAssociationFee_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransferFee_PayableColumn {
                get {
                    return this.columnTransferFee_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransferFee_PaidColumn {
                get {
                    return this.columnTransferFee_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransferFee_BreakupColumn {
                get {
                    return this.columnTransferFee_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationFee_PayableColumn {
                get {
                    return this.columnRegistrationFee_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationFee_PaidColumn {
                get {
                    return this.columnRegistrationFee_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationFee_BreakupColumn {
                get {
                    return this.columnRegistrationFee_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceCharge_PayableColumn {
                get {
                    return this.columnServiceCharge_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceCharge_PaidColumn {
                get {
                    return this.columnServiceCharge_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceCharge_BreakupColumn {
                get {
                    return this.columnServiceCharge_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SolarPanel_PayableColumn {
                get {
                    return this.columnSolarPanel_Payable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SolarPanel_PaidColumn {
                get {
                    return this.columnSolarPanel_Paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SolarPanel_BreakupColumn {
                get {
                    return this.columnSolarPanel_Breakup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VerifiedByColumn {
                get {
                    return this.columnVerifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckedByColumn {
                get {
                    return this.columnCheckedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecommendedByColumn {
                get {
                    return this.columnRecommendedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_PaymentComparisonRow this[int index] {
                get {
                    return ((sp_PaymentComparisonRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_PaymentComparisonRowChangeEventHandler sp_PaymentComparisonRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_PaymentComparisonRowChangeEventHandler sp_PaymentComparisonRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_PaymentComparisonRowChangeEventHandler sp_PaymentComparisonRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_PaymentComparisonRowChangeEventHandler sp_PaymentComparisonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addsp_PaymentComparisonRow(sp_PaymentComparisonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_PaymentComparisonRow Addsp_PaymentComparisonRow(
                        string ClientId, 
                        string ClientName, 
                        string CurrentAddress, 
                        string SalesPerson, 
                        string UnitInfo, 
                        string LoanInfo, 
                        string ClientStatus, 
                        bool isActiveClient, 
                        double AmountInHand, 
                        double Discount, 
                        double DecreasedArea, 
                        double RebateAmount, 
                        double TotalPayable, 
                        System.DateTime ReportDate, 
                        int InstallmentId, 
                        int InstallTypeId, 
                        string InstallType, 
                        string InstallmentName, 
                        double AmountPayable, 
                        double AmountPaid, 
                        string PaymentDescription, 
                        int TransactionType, 
                        double IncreasedArea_Payable, 
                        double IncreasedArea_Paid, 
                        string IncreasedArea_Breakup, 
                        double VariationCost_Payable, 
                        double VariationCost_Paid, 
                        string VariationCost_Breakup, 
                        double DelayCharge_Payable, 
                        double DelayCharge_Paid, 
                        string DelayCharge_Breakup, 
                        double UtilityCharge_Payable, 
                        double UtilityCharge_Paid, 
                        string UtilityCharge_Breakup, 
                        double VAT_Payable, 
                        double VAT_Paid, 
                        string VAT_Breakup, 
                        double AssociationFee_Payable, 
                        double AssociationFee_Paid, 
                        string AssociationFee_Breakup, 
                        double TransferFee_Payable, 
                        double TransferFee_Paid, 
                        string TransferFee_Breakup, 
                        double RegistrationFee_Payable, 
                        double RegistrationFee_Paid, 
                        string RegistrationFee_Breakup, 
                        double ServiceCharge_Payable, 
                        double ServiceCharge_Paid, 
                        string ServiceCharge_Breakup, 
                        double SolarPanel_Payable, 
                        double SolarPanel_Paid, 
                        string SolarPanel_Breakup, 
                        string VerifiedBy, 
                        string CheckedBy, 
                        string RecommendedBy) {
                sp_PaymentComparisonRow rowsp_PaymentComparisonRow = ((sp_PaymentComparisonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClientId,
                        ClientName,
                        CurrentAddress,
                        SalesPerson,
                        UnitInfo,
                        LoanInfo,
                        ClientStatus,
                        isActiveClient,
                        AmountInHand,
                        Discount,
                        DecreasedArea,
                        RebateAmount,
                        TotalPayable,
                        ReportDate,
                        InstallmentId,
                        InstallTypeId,
                        InstallType,
                        InstallmentName,
                        AmountPayable,
                        AmountPaid,
                        PaymentDescription,
                        TransactionType,
                        IncreasedArea_Payable,
                        IncreasedArea_Paid,
                        IncreasedArea_Breakup,
                        VariationCost_Payable,
                        VariationCost_Paid,
                        VariationCost_Breakup,
                        DelayCharge_Payable,
                        DelayCharge_Paid,
                        DelayCharge_Breakup,
                        UtilityCharge_Payable,
                        UtilityCharge_Paid,
                        UtilityCharge_Breakup,
                        VAT_Payable,
                        VAT_Paid,
                        VAT_Breakup,
                        AssociationFee_Payable,
                        AssociationFee_Paid,
                        AssociationFee_Breakup,
                        TransferFee_Payable,
                        TransferFee_Paid,
                        TransferFee_Breakup,
                        RegistrationFee_Payable,
                        RegistrationFee_Paid,
                        RegistrationFee_Breakup,
                        ServiceCharge_Payable,
                        ServiceCharge_Paid,
                        ServiceCharge_Breakup,
                        SolarPanel_Payable,
                        SolarPanel_Paid,
                        SolarPanel_Breakup,
                        VerifiedBy,
                        CheckedBy,
                        RecommendedBy};
                rowsp_PaymentComparisonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_PaymentComparisonRow);
                return rowsp_PaymentComparisonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sp_PaymentComparisonDataTable cln = ((sp_PaymentComparisonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_PaymentComparisonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnClientId = base.Columns["ClientId"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnCurrentAddress = base.Columns["CurrentAddress"];
                this.columnSalesPerson = base.Columns["SalesPerson"];
                this.columnUnitInfo = base.Columns["UnitInfo"];
                this.columnLoanInfo = base.Columns["LoanInfo"];
                this.columnClientStatus = base.Columns["ClientStatus"];
                this.columnisActiveClient = base.Columns["isActiveClient"];
                this.columnAmountInHand = base.Columns["AmountInHand"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnDecreasedArea = base.Columns["DecreasedArea"];
                this.columnRebateAmount = base.Columns["RebateAmount"];
                this.columnTotalPayable = base.Columns["TotalPayable"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnInstallmentId = base.Columns["InstallmentId"];
                this.columnInstallTypeId = base.Columns["InstallTypeId"];
                this.columnInstallType = base.Columns["InstallType"];
                this.columnInstallmentName = base.Columns["InstallmentName"];
                this.columnAmountPayable = base.Columns["AmountPayable"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
                this.columnPaymentDescription = base.Columns["PaymentDescription"];
                this.columnTransactionType = base.Columns["TransactionType"];
                this.columnIncreasedArea_Payable = base.Columns["IncreasedArea_Payable"];
                this.columnIncreasedArea_Paid = base.Columns["IncreasedArea_Paid"];
                this.columnIncreasedArea_Breakup = base.Columns["IncreasedArea_Breakup"];
                this.columnVariationCost_Payable = base.Columns["VariationCost_Payable"];
                this.columnVariationCost_Paid = base.Columns["VariationCost_Paid"];
                this.columnVariationCost_Breakup = base.Columns["VariationCost_Breakup"];
                this.columnDelayCharge_Payable = base.Columns["DelayCharge_Payable"];
                this.columnDelayCharge_Paid = base.Columns["DelayCharge_Paid"];
                this.columnDelayCharge_Breakup = base.Columns["DelayCharge_Breakup"];
                this.columnUtilityCharge_Payable = base.Columns["UtilityCharge_Payable"];
                this.columnUtilityCharge_Paid = base.Columns["UtilityCharge_Paid"];
                this.columnUtilityCharge_Breakup = base.Columns["UtilityCharge_Breakup"];
                this.columnVAT_Payable = base.Columns["VAT_Payable"];
                this.columnVAT_Paid = base.Columns["VAT_Paid"];
                this.columnVAT_Breakup = base.Columns["VAT_Breakup"];
                this.columnAssociationFee_Payable = base.Columns["AssociationFee_Payable"];
                this.columnAssociationFee_Paid = base.Columns["AssociationFee_Paid"];
                this.columnAssociationFee_Breakup = base.Columns["AssociationFee_Breakup"];
                this.columnTransferFee_Payable = base.Columns["TransferFee_Payable"];
                this.columnTransferFee_Paid = base.Columns["TransferFee_Paid"];
                this.columnTransferFee_Breakup = base.Columns["TransferFee_Breakup"];
                this.columnRegistrationFee_Payable = base.Columns["RegistrationFee_Payable"];
                this.columnRegistrationFee_Paid = base.Columns["RegistrationFee_Paid"];
                this.columnRegistrationFee_Breakup = base.Columns["RegistrationFee_Breakup"];
                this.columnServiceCharge_Payable = base.Columns["ServiceCharge_Payable"];
                this.columnServiceCharge_Paid = base.Columns["ServiceCharge_Paid"];
                this.columnServiceCharge_Breakup = base.Columns["ServiceCharge_Breakup"];
                this.columnSolarPanel_Payable = base.Columns["SolarPanel_Payable"];
                this.columnSolarPanel_Paid = base.Columns["SolarPanel_Paid"];
                this.columnSolarPanel_Breakup = base.Columns["SolarPanel_Breakup"];
                this.columnVerifiedBy = base.Columns["VerifiedBy"];
                this.columnCheckedBy = base.Columns["CheckedBy"];
                this.columnRecommendedBy = base.Columns["RecommendedBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnCurrentAddress = new global::System.Data.DataColumn("CurrentAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAddress);
                this.columnSalesPerson = new global::System.Data.DataColumn("SalesPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPerson);
                this.columnUnitInfo = new global::System.Data.DataColumn("UnitInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitInfo);
                this.columnLoanInfo = new global::System.Data.DataColumn("LoanInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanInfo);
                this.columnClientStatus = new global::System.Data.DataColumn("ClientStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientStatus);
                this.columnisActiveClient = new global::System.Data.DataColumn("isActiveClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisActiveClient);
                this.columnAmountInHand = new global::System.Data.DataColumn("AmountInHand", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountInHand);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnDecreasedArea = new global::System.Data.DataColumn("DecreasedArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecreasedArea);
                this.columnRebateAmount = new global::System.Data.DataColumn("RebateAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRebateAmount);
                this.columnTotalPayable = new global::System.Data.DataColumn("TotalPayable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayable);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnInstallmentId = new global::System.Data.DataColumn("InstallmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentId);
                this.columnInstallTypeId = new global::System.Data.DataColumn("InstallTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallTypeId);
                this.columnInstallType = new global::System.Data.DataColumn("InstallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallType);
                this.columnInstallmentName = new global::System.Data.DataColumn("InstallmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentName);
                this.columnAmountPayable = new global::System.Data.DataColumn("AmountPayable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPayable);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.columnPaymentDescription = new global::System.Data.DataColumn("PaymentDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDescription);
                this.columnTransactionType = new global::System.Data.DataColumn("TransactionType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionType);
                this.columnIncreasedArea_Payable = new global::System.Data.DataColumn("IncreasedArea_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncreasedArea_Payable);
                this.columnIncreasedArea_Paid = new global::System.Data.DataColumn("IncreasedArea_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncreasedArea_Paid);
                this.columnIncreasedArea_Breakup = new global::System.Data.DataColumn("IncreasedArea_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncreasedArea_Breakup);
                this.columnVariationCost_Payable = new global::System.Data.DataColumn("VariationCost_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariationCost_Payable);
                this.columnVariationCost_Paid = new global::System.Data.DataColumn("VariationCost_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariationCost_Paid);
                this.columnVariationCost_Breakup = new global::System.Data.DataColumn("VariationCost_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariationCost_Breakup);
                this.columnDelayCharge_Payable = new global::System.Data.DataColumn("DelayCharge_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelayCharge_Payable);
                this.columnDelayCharge_Paid = new global::System.Data.DataColumn("DelayCharge_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelayCharge_Paid);
                this.columnDelayCharge_Breakup = new global::System.Data.DataColumn("DelayCharge_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelayCharge_Breakup);
                this.columnUtilityCharge_Payable = new global::System.Data.DataColumn("UtilityCharge_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityCharge_Payable);
                this.columnUtilityCharge_Paid = new global::System.Data.DataColumn("UtilityCharge_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityCharge_Paid);
                this.columnUtilityCharge_Breakup = new global::System.Data.DataColumn("UtilityCharge_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityCharge_Breakup);
                this.columnVAT_Payable = new global::System.Data.DataColumn("VAT_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_Payable);
                this.columnVAT_Paid = new global::System.Data.DataColumn("VAT_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_Paid);
                this.columnVAT_Breakup = new global::System.Data.DataColumn("VAT_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_Breakup);
                this.columnAssociationFee_Payable = new global::System.Data.DataColumn("AssociationFee_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationFee_Payable);
                this.columnAssociationFee_Paid = new global::System.Data.DataColumn("AssociationFee_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationFee_Paid);
                this.columnAssociationFee_Breakup = new global::System.Data.DataColumn("AssociationFee_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationFee_Breakup);
                this.columnTransferFee_Payable = new global::System.Data.DataColumn("TransferFee_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferFee_Payable);
                this.columnTransferFee_Paid = new global::System.Data.DataColumn("TransferFee_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferFee_Paid);
                this.columnTransferFee_Breakup = new global::System.Data.DataColumn("TransferFee_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferFee_Breakup);
                this.columnRegistrationFee_Payable = new global::System.Data.DataColumn("RegistrationFee_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationFee_Payable);
                this.columnRegistrationFee_Paid = new global::System.Data.DataColumn("RegistrationFee_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationFee_Paid);
                this.columnRegistrationFee_Breakup = new global::System.Data.DataColumn("RegistrationFee_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationFee_Breakup);
                this.columnServiceCharge_Payable = new global::System.Data.DataColumn("ServiceCharge_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceCharge_Payable);
                this.columnServiceCharge_Paid = new global::System.Data.DataColumn("ServiceCharge_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceCharge_Paid);
                this.columnServiceCharge_Breakup = new global::System.Data.DataColumn("ServiceCharge_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceCharge_Breakup);
                this.columnSolarPanel_Payable = new global::System.Data.DataColumn("SolarPanel_Payable", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSolarPanel_Payable);
                this.columnSolarPanel_Paid = new global::System.Data.DataColumn("SolarPanel_Paid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSolarPanel_Paid);
                this.columnSolarPanel_Breakup = new global::System.Data.DataColumn("SolarPanel_Breakup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSolarPanel_Breakup);
                this.columnVerifiedBy = new global::System.Data.DataColumn("VerifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerifiedBy);
                this.columnCheckedBy = new global::System.Data.DataColumn("CheckedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckedBy);
                this.columnRecommendedBy = new global::System.Data.DataColumn("RecommendedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendedBy);
                this.columnClientId.MaxLength = 50;
                this.columnClientName.MaxLength = 100;
                this.columnCurrentAddress.MaxLength = 2147483647;
                this.columnSalesPerson.MaxLength = 2147483647;
                this.columnUnitInfo.MaxLength = 2147483647;
                this.columnLoanInfo.MaxLength = 2147483647;
                this.columnClientStatus.MaxLength = 50;
                this.columnInstallType.MaxLength = 50;
                this.columnInstallmentName.MaxLength = 100;
                this.columnPaymentDescription.MaxLength = 2147483647;
                this.columnIncreasedArea_Breakup.MaxLength = 2147483647;
                this.columnVariationCost_Breakup.MaxLength = 2147483647;
                this.columnDelayCharge_Breakup.MaxLength = 2147483647;
                this.columnUtilityCharge_Breakup.MaxLength = 2147483647;
                this.columnVAT_Breakup.MaxLength = 2147483647;
                this.columnAssociationFee_Breakup.MaxLength = 2147483647;
                this.columnTransferFee_Breakup.MaxLength = 2147483647;
                this.columnRegistrationFee_Breakup.MaxLength = 2147483647;
                this.columnServiceCharge_Breakup.MaxLength = 2147483647;
                this.columnSolarPanel_Breakup.MaxLength = 2147483647;
                this.columnVerifiedBy.MaxLength = 2147483647;
                this.columnCheckedBy.MaxLength = 2147483647;
                this.columnRecommendedBy.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_PaymentComparisonRow Newsp_PaymentComparisonRow() {
                return ((sp_PaymentComparisonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_PaymentComparisonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sp_PaymentComparisonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_PaymentComparisonRowChanged != null)) {
                    this.sp_PaymentComparisonRowChanged(this, new sp_PaymentComparisonRowChangeEvent(((sp_PaymentComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_PaymentComparisonRowChanging != null)) {
                    this.sp_PaymentComparisonRowChanging(this, new sp_PaymentComparisonRowChangeEvent(((sp_PaymentComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_PaymentComparisonRowDeleted != null)) {
                    this.sp_PaymentComparisonRowDeleted(this, new sp_PaymentComparisonRowChangeEvent(((sp_PaymentComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_PaymentComparisonRowDeleting != null)) {
                    this.sp_PaymentComparisonRowDeleting(this, new sp_PaymentComparisonRowChangeEvent(((sp_PaymentComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removesp_PaymentComparisonRow(sp_PaymentComparisonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_PaymentComparison ds = new ds_PaymentComparison();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_PaymentComparisonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sp_PaymentComparisonRow : global::System.Data.DataRow {
            
            private sp_PaymentComparisonDataTable tablesp_PaymentComparison;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sp_PaymentComparisonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_PaymentComparison = ((sp_PaymentComparisonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientId {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.ClientIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientId\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentAddress {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.CurrentAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAddress\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.CurrentAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesPerson {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.SalesPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPerson\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.SalesPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitInfo {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.UnitInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitInfo\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.UnitInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoanInfo {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.LoanInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanInfo\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.LoanInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientStatus {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.ClientStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientStatus\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ClientStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isActiveClient {
                get {
                    try {
                        return ((bool)(this[this.tablesp_PaymentComparison.isActiveClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isActiveClient\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.isActiveClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AmountInHand {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.AmountInHandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountInHand\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.AmountInHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DecreasedArea {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.DecreasedAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecreasedArea\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.DecreasedAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RebateAmount {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.RebateAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RebateAmount\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.RebateAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalPayable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.TotalPayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayable\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.TotalPayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesp_PaymentComparison.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InstallmentId {
                get {
                    try {
                        return ((int)(this[this.tablesp_PaymentComparison.InstallmentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallmentId\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.InstallmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InstallTypeId {
                get {
                    try {
                        return ((int)(this[this.tablesp_PaymentComparison.InstallTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallTypeId\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.InstallTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InstallType {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.InstallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallType\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.InstallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InstallmentName {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.InstallmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallmentName\' in table \'sp_PaymentComparison\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.InstallmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AmountPayable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.AmountPayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPayable\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.AmountPayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AmountPaid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentDescription {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.PaymentDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDescription\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.PaymentDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TransactionType {
                get {
                    try {
                        return ((int)(this[this.tablesp_PaymentComparison.TransactionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionType\' in table \'sp_PaymentComparison\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.TransactionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IncreasedArea_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.IncreasedArea_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncreasedArea_Payable\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.IncreasedArea_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IncreasedArea_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.IncreasedArea_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncreasedArea_Paid\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.IncreasedArea_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IncreasedArea_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.IncreasedArea_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncreasedArea_Breakup\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.IncreasedArea_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VariationCost_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.VariationCost_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VariationCost_Payable\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VariationCost_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VariationCost_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.VariationCost_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VariationCost_Paid\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VariationCost_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VariationCost_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.VariationCost_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VariationCost_Breakup\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VariationCost_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DelayCharge_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.DelayCharge_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelayCharge_Payable\' in table \'sp_PaymentComparison\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.DelayCharge_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DelayCharge_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.DelayCharge_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelayCharge_Paid\' in table \'sp_PaymentComparison\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.DelayCharge_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelayCharge_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.DelayCharge_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelayCharge_Breakup\' in table \'sp_PaymentComparison\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.DelayCharge_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UtilityCharge_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.UtilityCharge_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilityCharge_Payable\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.UtilityCharge_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UtilityCharge_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.UtilityCharge_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilityCharge_Paid\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.UtilityCharge_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UtilityCharge_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.UtilityCharge_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilityCharge_Breakup\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.UtilityCharge_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VAT_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.VAT_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_Payable\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VAT_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VAT_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.VAT_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_Paid\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VAT_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VAT_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.VAT_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_Breakup\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VAT_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AssociationFee_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.AssociationFee_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationFee_Payable\' in table \'sp_PaymentComparison\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.AssociationFee_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AssociationFee_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.AssociationFee_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationFee_Paid\' in table \'sp_PaymentComparison\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.AssociationFee_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssociationFee_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.AssociationFee_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationFee_Breakup\' in table \'sp_PaymentComparison\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.AssociationFee_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TransferFee_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.TransferFee_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferFee_Payable\' in table \'sp_PaymentComparison\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.TransferFee_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TransferFee_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.TransferFee_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferFee_Paid\' in table \'sp_PaymentComparison\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.TransferFee_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransferFee_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.TransferFee_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferFee_Breakup\' in table \'sp_PaymentComparison\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.TransferFee_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RegistrationFee_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.RegistrationFee_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationFee_Payable\' in table \'sp_PaymentComparison\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.RegistrationFee_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RegistrationFee_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.RegistrationFee_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationFee_Paid\' in table \'sp_PaymentComparison\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.RegistrationFee_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegistrationFee_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.RegistrationFee_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationFee_Breakup\' in table \'sp_PaymentComparison\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.RegistrationFee_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ServiceCharge_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.ServiceCharge_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceCharge_Payable\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ServiceCharge_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ServiceCharge_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.ServiceCharge_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceCharge_Paid\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ServiceCharge_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ServiceCharge_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.ServiceCharge_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceCharge_Breakup\' in table \'sp_PaymentComparison\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.ServiceCharge_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SolarPanel_Payable {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.SolarPanel_PayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SolarPanel_Payable\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.SolarPanel_PayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SolarPanel_Paid {
                get {
                    try {
                        return ((double)(this[this.tablesp_PaymentComparison.SolarPanel_PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SolarPanel_Paid\' in table \'sp_PaymentComparison\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.SolarPanel_PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SolarPanel_Breakup {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.SolarPanel_BreakupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SolarPanel_Breakup\' in table \'sp_PaymentComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.SolarPanel_BreakupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VerifiedBy {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.VerifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VerifiedBy\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.VerifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CheckedBy {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.CheckedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CheckedBy\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.CheckedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RecommendedBy {
                get {
                    try {
                        return ((string)(this[this.tablesp_PaymentComparison.RecommendedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecommendedBy\' in table \'sp_PaymentComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_PaymentComparison.RecommendedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientIdNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientIdNull() {
                this[this.tablesp_PaymentComparison.ClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNameNull() {
                this[this.tablesp_PaymentComparison.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentAddressNull() {
                return this.IsNull(this.tablesp_PaymentComparison.CurrentAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentAddressNull() {
                this[this.tablesp_PaymentComparison.CurrentAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesPersonNull() {
                return this.IsNull(this.tablesp_PaymentComparison.SalesPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesPersonNull() {
                this[this.tablesp_PaymentComparison.SalesPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitInfoNull() {
                return this.IsNull(this.tablesp_PaymentComparison.UnitInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitInfoNull() {
                this[this.tablesp_PaymentComparison.UnitInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoanInfoNull() {
                return this.IsNull(this.tablesp_PaymentComparison.LoanInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoanInfoNull() {
                this[this.tablesp_PaymentComparison.LoanInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientStatusNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ClientStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientStatusNull() {
                this[this.tablesp_PaymentComparison.ClientStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisActiveClientNull() {
                return this.IsNull(this.tablesp_PaymentComparison.isActiveClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisActiveClientNull() {
                this[this.tablesp_PaymentComparison.isActiveClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountInHandNull() {
                return this.IsNull(this.tablesp_PaymentComparison.AmountInHandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountInHandNull() {
                this[this.tablesp_PaymentComparison.AmountInHandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablesp_PaymentComparison.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiscountNull() {
                this[this.tablesp_PaymentComparison.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecreasedAreaNull() {
                return this.IsNull(this.tablesp_PaymentComparison.DecreasedAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecreasedAreaNull() {
                this[this.tablesp_PaymentComparison.DecreasedAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRebateAmountNull() {
                return this.IsNull(this.tablesp_PaymentComparison.RebateAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRebateAmountNull() {
                this[this.tablesp_PaymentComparison.RebateAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.TotalPayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPayableNull() {
                this[this.tablesp_PaymentComparison.TotalPayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReportDateNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReportDateNull() {
                this[this.tablesp_PaymentComparison.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstallmentIdNull() {
                return this.IsNull(this.tablesp_PaymentComparison.InstallmentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstallmentIdNull() {
                this[this.tablesp_PaymentComparison.InstallmentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstallTypeIdNull() {
                return this.IsNull(this.tablesp_PaymentComparison.InstallTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstallTypeIdNull() {
                this[this.tablesp_PaymentComparison.InstallTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstallTypeNull() {
                return this.IsNull(this.tablesp_PaymentComparison.InstallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstallTypeNull() {
                this[this.tablesp_PaymentComparison.InstallTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstallmentNameNull() {
                return this.IsNull(this.tablesp_PaymentComparison.InstallmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstallmentNameNull() {
                this[this.tablesp_PaymentComparison.InstallmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountPayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.AmountPayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountPayableNull() {
                this[this.tablesp_PaymentComparison.AmountPayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountPaidNull() {
                this[this.tablesp_PaymentComparison.AmountPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentDescriptionNull() {
                return this.IsNull(this.tablesp_PaymentComparison.PaymentDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentDescriptionNull() {
                this[this.tablesp_PaymentComparison.PaymentDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionTypeNull() {
                return this.IsNull(this.tablesp_PaymentComparison.TransactionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionTypeNull() {
                this[this.tablesp_PaymentComparison.TransactionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIncreasedArea_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.IncreasedArea_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIncreasedArea_PayableNull() {
                this[this.tablesp_PaymentComparison.IncreasedArea_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIncreasedArea_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.IncreasedArea_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIncreasedArea_PaidNull() {
                this[this.tablesp_PaymentComparison.IncreasedArea_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIncreasedArea_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.IncreasedArea_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIncreasedArea_BreakupNull() {
                this[this.tablesp_PaymentComparison.IncreasedArea_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVariationCost_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VariationCost_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVariationCost_PayableNull() {
                this[this.tablesp_PaymentComparison.VariationCost_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVariationCost_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VariationCost_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVariationCost_PaidNull() {
                this[this.tablesp_PaymentComparison.VariationCost_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVariationCost_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VariationCost_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVariationCost_BreakupNull() {
                this[this.tablesp_PaymentComparison.VariationCost_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelayCharge_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.DelayCharge_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelayCharge_PayableNull() {
                this[this.tablesp_PaymentComparison.DelayCharge_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelayCharge_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.DelayCharge_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelayCharge_PaidNull() {
                this[this.tablesp_PaymentComparison.DelayCharge_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelayCharge_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.DelayCharge_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelayCharge_BreakupNull() {
                this[this.tablesp_PaymentComparison.DelayCharge_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUtilityCharge_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.UtilityCharge_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUtilityCharge_PayableNull() {
                this[this.tablesp_PaymentComparison.UtilityCharge_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUtilityCharge_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.UtilityCharge_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUtilityCharge_PaidNull() {
                this[this.tablesp_PaymentComparison.UtilityCharge_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUtilityCharge_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.UtilityCharge_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUtilityCharge_BreakupNull() {
                this[this.tablesp_PaymentComparison.UtilityCharge_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VAT_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_PayableNull() {
                this[this.tablesp_PaymentComparison.VAT_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VAT_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_PaidNull() {
                this[this.tablesp_PaymentComparison.VAT_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VAT_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_BreakupNull() {
                this[this.tablesp_PaymentComparison.VAT_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssociationFee_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.AssociationFee_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssociationFee_PayableNull() {
                this[this.tablesp_PaymentComparison.AssociationFee_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssociationFee_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.AssociationFee_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssociationFee_PaidNull() {
                this[this.tablesp_PaymentComparison.AssociationFee_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssociationFee_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.AssociationFee_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssociationFee_BreakupNull() {
                this[this.tablesp_PaymentComparison.AssociationFee_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransferFee_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.TransferFee_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransferFee_PayableNull() {
                this[this.tablesp_PaymentComparison.TransferFee_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransferFee_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.TransferFee_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransferFee_PaidNull() {
                this[this.tablesp_PaymentComparison.TransferFee_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransferFee_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.TransferFee_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransferFee_BreakupNull() {
                this[this.tablesp_PaymentComparison.TransferFee_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationFee_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.RegistrationFee_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationFee_PayableNull() {
                this[this.tablesp_PaymentComparison.RegistrationFee_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationFee_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.RegistrationFee_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationFee_PaidNull() {
                this[this.tablesp_PaymentComparison.RegistrationFee_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationFee_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.RegistrationFee_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationFee_BreakupNull() {
                this[this.tablesp_PaymentComparison.RegistrationFee_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceCharge_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ServiceCharge_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceCharge_PayableNull() {
                this[this.tablesp_PaymentComparison.ServiceCharge_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceCharge_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ServiceCharge_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceCharge_PaidNull() {
                this[this.tablesp_PaymentComparison.ServiceCharge_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceCharge_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.ServiceCharge_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceCharge_BreakupNull() {
                this[this.tablesp_PaymentComparison.ServiceCharge_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSolarPanel_PayableNull() {
                return this.IsNull(this.tablesp_PaymentComparison.SolarPanel_PayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSolarPanel_PayableNull() {
                this[this.tablesp_PaymentComparison.SolarPanel_PayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSolarPanel_PaidNull() {
                return this.IsNull(this.tablesp_PaymentComparison.SolarPanel_PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSolarPanel_PaidNull() {
                this[this.tablesp_PaymentComparison.SolarPanel_PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSolarPanel_BreakupNull() {
                return this.IsNull(this.tablesp_PaymentComparison.SolarPanel_BreakupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSolarPanel_BreakupNull() {
                this[this.tablesp_PaymentComparison.SolarPanel_BreakupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVerifiedByNull() {
                return this.IsNull(this.tablesp_PaymentComparison.VerifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVerifiedByNull() {
                this[this.tablesp_PaymentComparison.VerifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckedByNull() {
                return this.IsNull(this.tablesp_PaymentComparison.CheckedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckedByNull() {
                this[this.tablesp_PaymentComparison.CheckedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecommendedByNull() {
                return this.IsNull(this.tablesp_PaymentComparison.RecommendedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecommendedByNull() {
                this[this.tablesp_PaymentComparison.RecommendedByColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class sp_PaymentComparisonRowChangeEvent : global::System.EventArgs {
            
            private sp_PaymentComparisonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_PaymentComparisonRowChangeEvent(sp_PaymentComparisonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_PaymentComparisonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RealEstateManagementSystem.ReportDataSet.ds_PaymentComparisonTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_PaymentComparisonTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public sp_PaymentComparisonTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sp_PaymentComparison";
            tableMapping.ColumnMappings.Add("ClientId", "ClientId");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("CurrentAddress", "CurrentAddress");
            tableMapping.ColumnMappings.Add("SalesPerson", "SalesPerson");
            tableMapping.ColumnMappings.Add("UnitInfo", "UnitInfo");
            tableMapping.ColumnMappings.Add("LoanInfo", "LoanInfo");
            tableMapping.ColumnMappings.Add("ClientStatus", "ClientStatus");
            tableMapping.ColumnMappings.Add("isActiveClient", "isActiveClient");
            tableMapping.ColumnMappings.Add("AmountInHand", "AmountInHand");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("DecreasedArea", "DecreasedArea");
            tableMapping.ColumnMappings.Add("RebateAmount", "RebateAmount");
            tableMapping.ColumnMappings.Add("TotalPayable", "TotalPayable");
            tableMapping.ColumnMappings.Add("ReportDate", "ReportDate");
            tableMapping.ColumnMappings.Add("InstallmentId", "InstallmentId");
            tableMapping.ColumnMappings.Add("InstallTypeId", "InstallTypeId");
            tableMapping.ColumnMappings.Add("InstallType", "InstallType");
            tableMapping.ColumnMappings.Add("InstallmentName", "InstallmentName");
            tableMapping.ColumnMappings.Add("AmountPayable", "AmountPayable");
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid");
            tableMapping.ColumnMappings.Add("PaymentDescription", "PaymentDescription");
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType");
            tableMapping.ColumnMappings.Add("IncreasedArea_Payable", "IncreasedArea_Payable");
            tableMapping.ColumnMappings.Add("IncreasedArea_Paid", "IncreasedArea_Paid");
            tableMapping.ColumnMappings.Add("IncreasedArea_Breakup", "IncreasedArea_Breakup");
            tableMapping.ColumnMappings.Add("VariationCost_Payable", "VariationCost_Payable");
            tableMapping.ColumnMappings.Add("VariationCost_Paid", "VariationCost_Paid");
            tableMapping.ColumnMappings.Add("VariationCost_Breakup", "VariationCost_Breakup");
            tableMapping.ColumnMappings.Add("DelayCharge_Payable", "DelayCharge_Payable");
            tableMapping.ColumnMappings.Add("DelayCharge_Paid", "DelayCharge_Paid");
            tableMapping.ColumnMappings.Add("DelayCharge_Breakup", "DelayCharge_Breakup");
            tableMapping.ColumnMappings.Add("UtilityCharge_Payable", "UtilityCharge_Payable");
            tableMapping.ColumnMappings.Add("UtilityCharge_Paid", "UtilityCharge_Paid");
            tableMapping.ColumnMappings.Add("UtilityCharge_Breakup", "UtilityCharge_Breakup");
            tableMapping.ColumnMappings.Add("VAT_Payable", "VAT_Payable");
            tableMapping.ColumnMappings.Add("VAT_Paid", "VAT_Paid");
            tableMapping.ColumnMappings.Add("VAT_Breakup", "VAT_Breakup");
            tableMapping.ColumnMappings.Add("AssociationFee_Payable", "AssociationFee_Payable");
            tableMapping.ColumnMappings.Add("AssociationFee_Paid", "AssociationFee_Paid");
            tableMapping.ColumnMappings.Add("AssociationFee_Breakup", "AssociationFee_Breakup");
            tableMapping.ColumnMappings.Add("TransferFee_Payable", "TransferFee_Payable");
            tableMapping.ColumnMappings.Add("TransferFee_Paid", "TransferFee_Paid");
            tableMapping.ColumnMappings.Add("TransferFee_Breakup", "TransferFee_Breakup");
            tableMapping.ColumnMappings.Add("RegistrationFee_Payable", "RegistrationFee_Payable");
            tableMapping.ColumnMappings.Add("RegistrationFee_Paid", "RegistrationFee_Paid");
            tableMapping.ColumnMappings.Add("RegistrationFee_Breakup", "RegistrationFee_Breakup");
            tableMapping.ColumnMappings.Add("ServiceCharge_Payable", "ServiceCharge_Payable");
            tableMapping.ColumnMappings.Add("ServiceCharge_Paid", "ServiceCharge_Paid");
            tableMapping.ColumnMappings.Add("ServiceCharge_Breakup", "ServiceCharge_Breakup");
            tableMapping.ColumnMappings.Add("SolarPanel_Payable", "SolarPanel_Payable");
            tableMapping.ColumnMappings.Add("SolarPanel_Paid", "SolarPanel_Paid");
            tableMapping.ColumnMappings.Add("SolarPanel_Breakup", "SolarPanel_Breakup");
            tableMapping.ColumnMappings.Add("VerifiedBy", "VerifiedBy");
            tableMapping.ColumnMappings.Add("CheckedBy", "CheckedBy");
            tableMapping.ColumnMappings.Add("RecommendedBy", "RecommendedBy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::RealEstateManagementSystem.Properties.Settings.Default.CentralDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sp_PaymentComparison";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clientId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@verifiedBy", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@checkedBy", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recommendedBy", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_PaymentComparison.sp_PaymentComparisonDataTable dataTable, global::System.Nullable<int> clientId, global::System.Nullable<int> verifiedBy, global::System.Nullable<int> checkedBy, global::System.Nullable<int> recommendedBy) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((clientId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(clientId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((verifiedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(verifiedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((checkedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(checkedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((recommendedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(recommendedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_PaymentComparison.sp_PaymentComparisonDataTable GetData(global::System.Nullable<int> clientId, global::System.Nullable<int> verifiedBy, global::System.Nullable<int> checkedBy, global::System.Nullable<int> recommendedBy) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((clientId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(clientId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((verifiedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(verifiedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((checkedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(checkedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((recommendedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(recommendedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            ds_PaymentComparison.sp_PaymentComparisonDataTable dataTable = new ds_PaymentComparison.sp_PaymentComparisonDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ds_PaymentComparison dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ds_PaymentComparison dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ds_PaymentComparison dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ds_PaymentComparison dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591